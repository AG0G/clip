<!DOCTYPE html> <html lang="en"> <head>     <meta charset="UTF-8">     <meta name="viewport" content="width=device-width, initial-scale=1.0">     <title>Online Clipboard</title>     <style>         body {             font-family: 'Arial', sans-serif;             background-color: #e9ecef;             color: #343a40;             margin: 0;             padding: 50px;             display: flex;             flex-direction: column;             align-items: center;             height: 100vh;             justify-content: center;         }         h1 {             color: #007bff;             margin-bottom: 30px;             font-size: 2.5em;             text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.1);         }         form {             background: white;             padding: 30px;             border-radius: 12px;             box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);             width: 350px;             display: flex;             flex-direction: column;         }         input[type="text"] {             margin-bottom: 20px;             padding: 12px;             border: 1px solid #ced4da;             border-radius: 6px;             font-size: 16px;         }         button {             padding: 12px;             background-color: #007bff;             color: white;             border: none;             border-radius: 6px;             font-size: 16px;             cursor: pointer;         }         #errorMessage {             color: red;             margin-top: 15px;             display: none;         }         #timer {             color: #28a745;             margin-top: 10px;             display: none;         }         #fetchedData {             margin-top: 20px;             padding: 15px;             border: 1px solid #007bff;             border-radius: 6px;             background-color: #f1f8ff;             display: none;         }         #copyButton {             margin-top: 10px;             display: none;         }     </style> </head> <body>     <h1>Online Clipboard</h1>     <form id="dataForm">         <input type="text" id="userInput" placeholder="Enter values separated by commas">         <button type="submit" id="submitButton">Send</button>         <div id="errorMessage"></div>         <div id="timer"></div>     </form>     <div id="fetchedData"></div>     <button id="copyButton">Copy Data</button>      <script>         document.getElementById('dataForm').onsubmit = async function(event) {             event.preventDefault();             const userInput = document.getElementById('userInput').value;             const randomCode = Math.floor(10000 + Math.random() * 90000).toString();             const finalData = userInput.includes('<') ? btoa(userInput) : userInput; // Encode if HTML              const response = await fetch('https://api.github.com/repos/ag0g/snap/dispatches', {                 method: 'POST',                 headers: {                     'Authorization': 'token ghp_c6RQI7T87jRb1KAAihAoM0UjbgYoIw2QKot', // Your API token                     'Accept': 'application/vnd.github.v3+json',                     'Content-Type': 'application/json',                 },                 body: JSON.stringify({                     event_type: 'updateData',                     client_payload: {                         filename: `bin/${randomCode}.txt`, // Always .txt extension                         data: finalData                     }                 })             });              if (response.ok) {                 alert(`Your unique code to access your data is: ${randomCode}`);             } else {                 const errorText = await response.text();                 showError('Failed to submit data: ' + errorText);             }         };          function showError(message) {             const errorMessageDiv = document.getElementById('errorMessage');             errorMessageDiv.textContent = message;             errorMessageDiv.style.display = 'block';         }     </script> </body> </html>